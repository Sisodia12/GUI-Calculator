import tkinter as tk
from tkinter import messagebox

class Calculator:
    def __init__(self, master):
        self.master = master
        master.title("Simple Calculator")

        self.result_var = tk.StringVar()
        self.history_var = tk.StringVar()
        self.history = []

        # Entry for displaying the result
        self.result_entry = tk.Entry(master, textvariable=self.result_var, font=("Arial", 24), bd=10, insertwidth=2, width=14, borderwidth=4)
        self.result_entry.grid(row=0, column=0, columnspan=4)

        # Buttons for digits and operations
        buttons = [
            '7', '8', '9', '/',
            '4', '5', '6', '*',
            '1', '2', '3', '-',
            '0', 'C', '=', '+'
        ]

        row_val = 1
        col_val = 0

        for button in buttons:
            tk.Button(master, text=button, padx=20, pady=20, font=("Arial", 18),
                      command=lambda b=button: self.on_button_click(b)).grid(row=row_val, column=col_val)
            col_val += 1
            if col_val > 3:
                col_val = 0
                row_val += 1

        # History display
        self.history_label = tk.Label(master, text="History:", font=("Arial", 14))
        self.history_label.grid(row=row_val, column=0, columnspan=4)

        self.history_display = tk.Text(master, height=10, width=30, font=("Arial", 12))
        self.history_display.grid(row=row_val + 1, column=0, columnspan=4)

    def on_button_click(self, char):
        if char == 'C':
            self.result_var.set("")
        elif char == '=':
            self.calculate_result()
        else:
            current_text = self.result_var.get()
            self.result_var.set(current_text + char)

    def calculate_result(self):
        try:
            expression = self.result_var.get()
            result = eval(expression)
            self.history.append(f"{expression} = {result}")
            self.update_history()
            self.result_var.set(result)
        except Exception as e:
            messagebox.showerror("Error", "Invalid input. Please try again.")
            self.result_var.set("")

    def update_history(self):
        self.history_display.delete(1.0, tk.END)  # Clear the history display
        for entry in self.history:
            self.history_display.insert(tk.END, entry + "\n")

if __name__ == "__main__":
    root = tk.Tk()
    calculator = Calculator(root)
    root.mainloop()
